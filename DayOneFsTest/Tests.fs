namespace DayOneFsTest

open System
open Microsoft.VisualStudio.TestTools.UnitTesting
open DayOneFs

[<TestClass>]
type TestClass () =

    [<TestMethod>]
    member this.TestMethodPassing () =
        Assert.IsTrue(true);

    [<TestMethod>]
    member this.ComparerCountsExpectedIncreasesFromTestInput () =
        let input = [199;200;208;210;200;207;240;269;260;263]
        let expected = 7
        let actual = Comparer.CountIncreasesInSequence input
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.ComparerCountsExpectedIncreasesWhenAllIncreasing () =
        let expected = 2
        let actual = Comparer.CountIncreasesInSequence [1;2;3]
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.ComparerReturnsZeroIfArrayHasOnlyOneElement () =
        let expected = 0
        let actual = Comparer.CountIncreasesInSequence []
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.ComparerGetsAnswerToDayOne () =
        let input = [|178;205;212;210;215;220;223;224;230;232;235;225;226;227;238;248;249;251;252;261;273;283;284;286;296;297;303;317;320;333;370;339;342;345;325;323;334;325;326;327;333;329;337;340;363;353;341;344;345;364;356;357;355;357;358;360;372;373;377;379;354;349;355;356;361;363;366;371;354;356;350;360;377;369;373;376;375;376;360;362;378;381;399;405;428;430;435;458;459;465;466;488;499;509;514;524;531;552;553;557;589;611;628;633;635;639;641;643;645;647;649;651;656;652;657;655;658;664;665;671;681;693;705;708;704;700;702;703;705;706;709;721;726;724;727;734;735;738;739;759;761;763;766;769;768;779;782;786;787;809;820;821;822;823;831;835;842;843;849;851;852;856;852;856;857;859;871;875;850;865;875;895;902;903;905;910;911;922;936;937;938;939;948;955;954;955;958;965;966;972;979;975;981;982;978;979;991;1009;1010;1009;988;985;989;990;999;1012;1013;1015;1018;1021;1038;1036;1051;1059;1076;1077;1081;1082;1111;1115;1114;1127;1129;1153;1156;1157;1163;1164;1168;1174;1180;1187;1188;1203;1207;1182;1183;1180;1181;1182;1180;1190;1189;1186;1187;1191;1207;1231;1246;1235;1240;1242;1244;1241;1245;1248;1251;1252;1260;1270;1273;1274;1270;1285;1281;1285;1306;1305;1304;1313;1318;1352;1371;1380;1379;1380;1382;1390;1394;1395;1408;1406;1407;1413;1425;1446;1447;1448;1450;1473;1482;1490;1488;1479;1484;1502;1507;1508;1509;1511;1512;1517;1520;1532;1536;1538;1537;1538;1539;1571;1574;1542;1548;1549;1550;1551;1549;1551;1563;1565;1558;1559;1589;1590;1591;1592;1593;1595;1573;1582;1608;1619;1625;1627;1638;1666;1665;1685;1687;1690;1700;1707;1714;1720;1729;1765;1767;1768;1752;1749;1764;1765;1774;1775;1777;1778;1787;1788;1789;1793;1794;1795;1800;1802;1808;1809;1803;1804;1815;1816;1823;1822;1828;1830;1835;1837;1846;1863;1865;1869;1872;1873;1876;1893;1894;1901;1903;1904;1900;1911;1913;1914;1916;1923;1946;1949;1951;1964;1965;1967;1978;2001;2004;2016;2021;2023;2026;2027;2029;2027;2028;2031;2041;2033;2041;2042;2034;2040;2043;2045;2058;2056;2061;2054;2064;2063;2068;2069;2073;2076;2077;2075;2077;2066;2067;2071;2072;2073;2077;2081;2082;2090;2086;2118;2122;2145;2151;2176;2177;2179;2189;2205;2218;2223;2248;2249;2250;2254;2247;2264;2265;2271;2272;2290;2292;2326;2328;2327;2328;2335;2338;2339;2347;2348;2349;2356;2353;2362;2363;2367;2369;2377;2384;2395;2397;2408;2409;2410;2409;2411;2407;2369;2372;2376;2378;2377;2382;2383;2384;2388;2390;2395;2393;2425;2418;2423;2446;2452;2464;2469;2473;2474;2472;2471;2473;2475;2476;2477;2479;2494;2500;2501;2502;2503;2534;2542;2541;2542;2560;2563;2570;2582;2577;2581;2579;2578;2586;2598;2599;2602;2606;2616;2618;2620;2622;2592;2595;2596;2629;2624;2626;2634;2635;2654;2655;2658;2630;2650;2661;2662;2663;2665;2686;2687;2690;2685;2696;2697;2704;2707;2709;2710;2711;2708;2712;2714;2717;2721;2719;2724;2729;2730;2761;2770;2772;2773;2791;2802;2803;2804;2798;2800;2803;2799;2796;2801;2804;2805;2814;2817;2801;2806;2807;2811;2829;2832;2820;2821;2858;2860;2863;2885;2889;2891;2892;2902;2913;2916;2917;2918;2919;2918;2927;2928;2932;2934;2951;2953;2954;2978;2981;3004;2999;3018;3017;3018;3019;3020;3018;3030;3040;3042;3046;3072;3087;3102;3141;3142;3163;3166;3179;3190;3191;3194;3197;3203;3220;3224;3232;3236;3255;3257;3261;3279;3278;3279;3284;3310;3330;3332;3334;3335;3365;3380;3381;3386;3373;3378;3398;3418;3422;3425;3427;3435;3442;3446;3447;3446;3448;3444;3445;3447;3448;3449;3453;3466;3467;3476;3479;3482;3483;3486;3500;3499;3501;3492;3490;3491;3493;3499;3501;3505;3490;3499;3500;3513;3514;3535;3550;3548;3549;3546;3547;3553;3554;3574;3575;3582;3583;3582;3585;3587;3600;3601;3605;3610;3609;3617;3598;3599;3601;3602;3585;3598;3615;3617;3623;3628;3631;3633;3636;3634;3635;3630;3617;3650;3652;3655;3660;3669;3685;3686;3674;3684;3685;3686;3694;3693;3694;3699;3708;3709;3722;3720;3724;3745;3740;3744;3762;3761;3783;3784;3785;3786;3781;3792;3797;3812;3814;3813;3788;3796;3795;3802;3805;3815;3816;3817;3818;3819;3822;3829;3833;3836;3847;3850;3851;3852;3850;3851;3870;3871;3873;3871;3874;3879;3888;3894;3900;3904;3907;3909;3912;3913;3921;3894;3896;3897;3898;3909;3914;3915;3913;3941;3945;3946;3947;3948;3954;3955;3980;3983;3985;3986;3993;3988;3992;3997;4002;4014;4022;4039;4044;4043;4040;4042;4053;4055;4066;4049;4070;4073;4081;4084;4085;4094;4107;4098;4107;4121;4140;4143;4144;4145;4156;4157;4174;4177;4163;4138;4143;4132;4118;4119;4120;4134;4137;4134;4168;4186;4190;4192;4202;4206;4214;4216;4217;4213;4217;4216;4238;4237;4245;4251;4255;4261;4276;4278;4282;4287;4290;4283;4277;4287;4290;4291;4292;4299;4302;4325;4326;4344;4339;4341;4343;4346;4345;4346;4348;4349;4350;4365;4364;4365;4367;4369;4373;4377;4375;4374;4400;4407;4409;4410;4413;4395;4400;4401;4404;4413;4408;4403;4405;4412;4417;4449;4469;4486;4492;4507;4513;4516;4517;4531;4540;4551;4561;4566;4568;4570;4571;4564;4572;4573;4575;4576;4605;4612;4602;4603;4608;4610;4617;4618;4620;4621;4622;4626;4639;4640;4661;4660;4658;4665;4664;4685;4686;4691;4694;4679;4684;4708;4709;4704;4721;4725;4727;4730;4731;4733;4741;4757;4759;4779;4786;4812;4818;4820;4836;4838;4839;4840;4844;4845;4851;4852;4858;4854;4860;4887;4853;4857;4867;4881;4883;4868;4869;4881;4862;4858;4860;4861;4862;4867;4872;4876;4892;4893;4894;4895;4897;4915;4924;4927;4929;4937;4938;4940;4943;4950;4957;4985;4984;4989;4978;4983;4984;4985;4978;4981;4983;4986;5012;5013;5014;5029;5031;5033;5034;5032;5033;5035;5037;5047;5049;5045;5048;5053;5055;5057;5071;5072;5070;5098;5091;5086;5072;5074;5076;5077;5078;5077;5078;5082;5085;5107;5135;5140;5142;5143;5146;5127;5130;5133;5144;5148;5150;5151;5158;5161;5165;5166;5172;5179;5180;5181;5179;5181;5211;5212;5217;5215;5216;5214;5234;5236;5239;5240;5253;5263;5276;5293;5305;5308;5313;5319;5324;5325;5328;5335;5337;5365;5352;5350;5352;5354;5355;5369;5375;5382;5387;5386;5393;5399;5403;5404;5406;5418;5423;5433;5434;5435;5436;5437;5438;5457;5454;5459;5460;5461;5463;5478;5490;5503;5512;5510;5517;5522;5525;5537;5553;5563;5553;5557;5563;5565;5573;5605;5579;5580;5581;5593;5596;5621;5612;5616;5621;5625;5633;5637;5647;5649;5661;5666;5657;5661;5664;5667;5679;5698;5699;5698;5706;5710;5712;5716;5692;5707;5709;5710;5711;5712;5713;5716;5730;5731;5732;5733;5736;5735;5737;5738;5740;5741;5742;5741;5748;5751;5759;5761;5766;5769;5781;5800;5801;5811;5813;5814;5813;5814;5821;5822;5821;5825;5844;5846;5858;5868;5875;5886;5889;5890;5896;5902;5905;5926;5925;5923;5897;5898;5924;5926;5943;5945;5956;5969;5980;5989;5998;6027;6028;6038;6039;6024;6026;6041;6058;6059;6063;6064;6068;6075;6081;6078;6059;6060;6088;6099;6104;6103;6104;6099;6100;6117;6113;6120;6121;6126;6157;6171;6172;6177;6178;6172;6173;6174;6179;6181;6191;6192;6197;6210;6209;6204;6205;6206;6215;6229;6232;6231;6241;6262;6263;6269;6270;6271;6278;6285;6287;6288;6289;6294;6298;6299;6312;6317;6323;6317;6318;6317;6319;6323;6322;6321;6325;6329;6348;6371;6368;6355;6332;6333;6342;6347;6351;6359;6346;6334;6331;6334;6355;6364;6365;6386;6391;6396;6370;6393;6395;6396;6399;6403;6411;6410;6417;6428;6429;6450;6426;6428;6429;6436;6437;6438;6464;6471;6475;6476;6483;6489;6490;6494;6490;6500;6501;6508;6516;6519;6520;6521;6524;6534;6541;6547;6549;6555;6556;6566;6568;6572;6586;6587;6590;6600;6605;6607;6609;6606;6605;6606;6616;6630;6640;6625;6624;6608;6618;6623;6627;6625;6646;6654;6655;6656;6659;6655;6656;6663;6658;6659;6657;6666;6667;6670;6671;6682;6662;6663;6664;6682;6692;6690;6704;6705;6712;6715;6719;6726;6727;6730;6728;6748;6759;6772;6773;6771;6773;6775;6766;6772;6784;6787;6789;6792;6795;6797;6799;6789;6790;6798;6800;6804;6803;6804;6797;6808;6814;6816;6819;6822;6833;6829;6830;6837;6839;6840;6842;6843;6849;6851;6853;6837;6843;6844;6849;6856;6858;6859;6857;6860;6862;6864;6863;6865;6870;6869;6849;6850;6855;6860;6856;6857;6867;6872;6874;6876;6866;6868;6877;6881;6882;6883;6893;6895;6896;6897;6910;6903;6904;6909;6910;6932;6930;6932;6944;6946;6966;6971;6972;6973;7000;7009;7011;7010;7021;7018;7017;7014;7018;7017;7020;7024;7027;7028;7030;7031;7037;7047;7056;7059;7061;7047;7074;7077;7078;7087;7116;7117;7127;7125;7101;7106;7112;7113;7125;7126;7129;7130;7133;7137;7138;7156;7158;7159;7158;7159;7160;7161;7163;7169;7172;7195;7196;7197;7199;7206;7218;7219;7222;7227;7239;7252;7256;7257;7249;7250;7256;7263;7267;7268;7279;7287;7290;7269;7268;7274;7278;7274;7282;7294;7295;7300;7299;7305;7297;7300;7301;7328;7360;7376;7365;7359;7362;7364;7373;7390;7398;7399;7407;7402;7401;7409;7411;7416;7408;7405;7408;7410;7414;7415;7418;7422;7428;7441;7442;7445;7454;7458;7460;7458;7467;7470;7501;7500;7501;7509;7521;7522;7523;7537;7540;7541;7551;7553;7554;7564;7565;7567;7563;7564;7580;7603;7604;7613;7614;7616;7627;7621;7630;7631;7641;7642;7652;7647;7646;7666;7690;7693;7691;7693;7699;7705;7682;7701;7703;7702;7710;7709;7711;7714;7713;7718;7727;7753;7756;7764;7782;7788;7787;7793;7794;7795;7767;7771;7776;7787;7791;7789;7790;7805;7804;7806;7814;7815;7816;7830;7832;7831;7830;7859;7878;7894;7896;7906;7927;7928;7929;7924;7929;7933;7934;7935;7946;7948;7950;7951;7973;7975;7976;7975;7974;7982;7964;7977;7967;7975;7973;7981;7999;8010;8017;8020;8021;8030;8055;8061;8069;8071;8072;8073;8082;8083;8096;8116;8122;8133;8134;8128;8136;8115;8122;8120;8126;8127;8134;8157;8158;8160;8164;8165;8179;8180;8186;8195;8205;8200;8197;8198;8199;8187;8193;8202;8214;8225;8224;8245;8235;8243;8244;8249;8250;8259;8264;8265;8273;8269;8273;8276;8278;8283;8284;8280;8294;8295;8296;8299;8300;8301;8302;8303;8305;8306;8310;8324;8326;8328;8335;8342;8344;8338;8341;8342;8348;8349;8351;8347;8355;8356;8357;8361;8364;8365;8372;8377;8392;8388;8387;8388;8394;8396;8407;8411;8426;8427;8426;8427;8430;8432;8435;8436;8437;8433;8428;8430;8431;8441;8442;8444;8441;8460;8464;8466;8459;8481;8486;8489;8462;8461;8478;8484;8483;8487;8488;8489;8513;8517;8518;8520;8534;8537;8538;8542;8546;8559;8564;8569;8582;8580;8582;8581;8586;8599;8605;8606;8593;8595;8600;8603;8608;8624;8632;8635;8640;8641;8642;8643;8662;8664;8674;8684;8685;8684;8692;8696;8701;8710;8691;8673;8674;8677;8675;8674;8669;8671;8670;8675;8678;8693;8697;8701;8702;8705;8713;8715;8720;8734;8741;8750;8753;8755|]
        let inputList = input |> Array.toList
        let expected = 1676
        let actual = Comparer.CountIncreasesInSequence inputList
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.ComparerCountsExpectedThreeMeasurementIncreasesFromTestInput () =
        let input = [199;200;208;210;200;207;240;269;260;263]
        let expected = 5
        let actual = Comparer.CountThreeMeasurementIncreases input
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.ComparerGetsAnswerToDayOnePartTwo () =
        let input = [|178;205;212;210;215;220;223;224;230;232;235;225;226;227;238;248;249;251;252;261;273;283;284;286;296;297;303;317;320;333;370;339;342;345;325;323;334;325;326;327;333;329;337;340;363;353;341;344;345;364;356;357;355;357;358;360;372;373;377;379;354;349;355;356;361;363;366;371;354;356;350;360;377;369;373;376;375;376;360;362;378;381;399;405;428;430;435;458;459;465;466;488;499;509;514;524;531;552;553;557;589;611;628;633;635;639;641;643;645;647;649;651;656;652;657;655;658;664;665;671;681;693;705;708;704;700;702;703;705;706;709;721;726;724;727;734;735;738;739;759;761;763;766;769;768;779;782;786;787;809;820;821;822;823;831;835;842;843;849;851;852;856;852;856;857;859;871;875;850;865;875;895;902;903;905;910;911;922;936;937;938;939;948;955;954;955;958;965;966;972;979;975;981;982;978;979;991;1009;1010;1009;988;985;989;990;999;1012;1013;1015;1018;1021;1038;1036;1051;1059;1076;1077;1081;1082;1111;1115;1114;1127;1129;1153;1156;1157;1163;1164;1168;1174;1180;1187;1188;1203;1207;1182;1183;1180;1181;1182;1180;1190;1189;1186;1187;1191;1207;1231;1246;1235;1240;1242;1244;1241;1245;1248;1251;1252;1260;1270;1273;1274;1270;1285;1281;1285;1306;1305;1304;1313;1318;1352;1371;1380;1379;1380;1382;1390;1394;1395;1408;1406;1407;1413;1425;1446;1447;1448;1450;1473;1482;1490;1488;1479;1484;1502;1507;1508;1509;1511;1512;1517;1520;1532;1536;1538;1537;1538;1539;1571;1574;1542;1548;1549;1550;1551;1549;1551;1563;1565;1558;1559;1589;1590;1591;1592;1593;1595;1573;1582;1608;1619;1625;1627;1638;1666;1665;1685;1687;1690;1700;1707;1714;1720;1729;1765;1767;1768;1752;1749;1764;1765;1774;1775;1777;1778;1787;1788;1789;1793;1794;1795;1800;1802;1808;1809;1803;1804;1815;1816;1823;1822;1828;1830;1835;1837;1846;1863;1865;1869;1872;1873;1876;1893;1894;1901;1903;1904;1900;1911;1913;1914;1916;1923;1946;1949;1951;1964;1965;1967;1978;2001;2004;2016;2021;2023;2026;2027;2029;2027;2028;2031;2041;2033;2041;2042;2034;2040;2043;2045;2058;2056;2061;2054;2064;2063;2068;2069;2073;2076;2077;2075;2077;2066;2067;2071;2072;2073;2077;2081;2082;2090;2086;2118;2122;2145;2151;2176;2177;2179;2189;2205;2218;2223;2248;2249;2250;2254;2247;2264;2265;2271;2272;2290;2292;2326;2328;2327;2328;2335;2338;2339;2347;2348;2349;2356;2353;2362;2363;2367;2369;2377;2384;2395;2397;2408;2409;2410;2409;2411;2407;2369;2372;2376;2378;2377;2382;2383;2384;2388;2390;2395;2393;2425;2418;2423;2446;2452;2464;2469;2473;2474;2472;2471;2473;2475;2476;2477;2479;2494;2500;2501;2502;2503;2534;2542;2541;2542;2560;2563;2570;2582;2577;2581;2579;2578;2586;2598;2599;2602;2606;2616;2618;2620;2622;2592;2595;2596;2629;2624;2626;2634;2635;2654;2655;2658;2630;2650;2661;2662;2663;2665;2686;2687;2690;2685;2696;2697;2704;2707;2709;2710;2711;2708;2712;2714;2717;2721;2719;2724;2729;2730;2761;2770;2772;2773;2791;2802;2803;2804;2798;2800;2803;2799;2796;2801;2804;2805;2814;2817;2801;2806;2807;2811;2829;2832;2820;2821;2858;2860;2863;2885;2889;2891;2892;2902;2913;2916;2917;2918;2919;2918;2927;2928;2932;2934;2951;2953;2954;2978;2981;3004;2999;3018;3017;3018;3019;3020;3018;3030;3040;3042;3046;3072;3087;3102;3141;3142;3163;3166;3179;3190;3191;3194;3197;3203;3220;3224;3232;3236;3255;3257;3261;3279;3278;3279;3284;3310;3330;3332;3334;3335;3365;3380;3381;3386;3373;3378;3398;3418;3422;3425;3427;3435;3442;3446;3447;3446;3448;3444;3445;3447;3448;3449;3453;3466;3467;3476;3479;3482;3483;3486;3500;3499;3501;3492;3490;3491;3493;3499;3501;3505;3490;3499;3500;3513;3514;3535;3550;3548;3549;3546;3547;3553;3554;3574;3575;3582;3583;3582;3585;3587;3600;3601;3605;3610;3609;3617;3598;3599;3601;3602;3585;3598;3615;3617;3623;3628;3631;3633;3636;3634;3635;3630;3617;3650;3652;3655;3660;3669;3685;3686;3674;3684;3685;3686;3694;3693;3694;3699;3708;3709;3722;3720;3724;3745;3740;3744;3762;3761;3783;3784;3785;3786;3781;3792;3797;3812;3814;3813;3788;3796;3795;3802;3805;3815;3816;3817;3818;3819;3822;3829;3833;3836;3847;3850;3851;3852;3850;3851;3870;3871;3873;3871;3874;3879;3888;3894;3900;3904;3907;3909;3912;3913;3921;3894;3896;3897;3898;3909;3914;3915;3913;3941;3945;3946;3947;3948;3954;3955;3980;3983;3985;3986;3993;3988;3992;3997;4002;4014;4022;4039;4044;4043;4040;4042;4053;4055;4066;4049;4070;4073;4081;4084;4085;4094;4107;4098;4107;4121;4140;4143;4144;4145;4156;4157;4174;4177;4163;4138;4143;4132;4118;4119;4120;4134;4137;4134;4168;4186;4190;4192;4202;4206;4214;4216;4217;4213;4217;4216;4238;4237;4245;4251;4255;4261;4276;4278;4282;4287;4290;4283;4277;4287;4290;4291;4292;4299;4302;4325;4326;4344;4339;4341;4343;4346;4345;4346;4348;4349;4350;4365;4364;4365;4367;4369;4373;4377;4375;4374;4400;4407;4409;4410;4413;4395;4400;4401;4404;4413;4408;4403;4405;4412;4417;4449;4469;4486;4492;4507;4513;4516;4517;4531;4540;4551;4561;4566;4568;4570;4571;4564;4572;4573;4575;4576;4605;4612;4602;4603;4608;4610;4617;4618;4620;4621;4622;4626;4639;4640;4661;4660;4658;4665;4664;4685;4686;4691;4694;4679;4684;4708;4709;4704;4721;4725;4727;4730;4731;4733;4741;4757;4759;4779;4786;4812;4818;4820;4836;4838;4839;4840;4844;4845;4851;4852;4858;4854;4860;4887;4853;4857;4867;4881;4883;4868;4869;4881;4862;4858;4860;4861;4862;4867;4872;4876;4892;4893;4894;4895;4897;4915;4924;4927;4929;4937;4938;4940;4943;4950;4957;4985;4984;4989;4978;4983;4984;4985;4978;4981;4983;4986;5012;5013;5014;5029;5031;5033;5034;5032;5033;5035;5037;5047;5049;5045;5048;5053;5055;5057;5071;5072;5070;5098;5091;5086;5072;5074;5076;5077;5078;5077;5078;5082;5085;5107;5135;5140;5142;5143;5146;5127;5130;5133;5144;5148;5150;5151;5158;5161;5165;5166;5172;5179;5180;5181;5179;5181;5211;5212;5217;5215;5216;5214;5234;5236;5239;5240;5253;5263;5276;5293;5305;5308;5313;5319;5324;5325;5328;5335;5337;5365;5352;5350;5352;5354;5355;5369;5375;5382;5387;5386;5393;5399;5403;5404;5406;5418;5423;5433;5434;5435;5436;5437;5438;5457;5454;5459;5460;5461;5463;5478;5490;5503;5512;5510;5517;5522;5525;5537;5553;5563;5553;5557;5563;5565;5573;5605;5579;5580;5581;5593;5596;5621;5612;5616;5621;5625;5633;5637;5647;5649;5661;5666;5657;5661;5664;5667;5679;5698;5699;5698;5706;5710;5712;5716;5692;5707;5709;5710;5711;5712;5713;5716;5730;5731;5732;5733;5736;5735;5737;5738;5740;5741;5742;5741;5748;5751;5759;5761;5766;5769;5781;5800;5801;5811;5813;5814;5813;5814;5821;5822;5821;5825;5844;5846;5858;5868;5875;5886;5889;5890;5896;5902;5905;5926;5925;5923;5897;5898;5924;5926;5943;5945;5956;5969;5980;5989;5998;6027;6028;6038;6039;6024;6026;6041;6058;6059;6063;6064;6068;6075;6081;6078;6059;6060;6088;6099;6104;6103;6104;6099;6100;6117;6113;6120;6121;6126;6157;6171;6172;6177;6178;6172;6173;6174;6179;6181;6191;6192;6197;6210;6209;6204;6205;6206;6215;6229;6232;6231;6241;6262;6263;6269;6270;6271;6278;6285;6287;6288;6289;6294;6298;6299;6312;6317;6323;6317;6318;6317;6319;6323;6322;6321;6325;6329;6348;6371;6368;6355;6332;6333;6342;6347;6351;6359;6346;6334;6331;6334;6355;6364;6365;6386;6391;6396;6370;6393;6395;6396;6399;6403;6411;6410;6417;6428;6429;6450;6426;6428;6429;6436;6437;6438;6464;6471;6475;6476;6483;6489;6490;6494;6490;6500;6501;6508;6516;6519;6520;6521;6524;6534;6541;6547;6549;6555;6556;6566;6568;6572;6586;6587;6590;6600;6605;6607;6609;6606;6605;6606;6616;6630;6640;6625;6624;6608;6618;6623;6627;6625;6646;6654;6655;6656;6659;6655;6656;6663;6658;6659;6657;6666;6667;6670;6671;6682;6662;6663;6664;6682;6692;6690;6704;6705;6712;6715;6719;6726;6727;6730;6728;6748;6759;6772;6773;6771;6773;6775;6766;6772;6784;6787;6789;6792;6795;6797;6799;6789;6790;6798;6800;6804;6803;6804;6797;6808;6814;6816;6819;6822;6833;6829;6830;6837;6839;6840;6842;6843;6849;6851;6853;6837;6843;6844;6849;6856;6858;6859;6857;6860;6862;6864;6863;6865;6870;6869;6849;6850;6855;6860;6856;6857;6867;6872;6874;6876;6866;6868;6877;6881;6882;6883;6893;6895;6896;6897;6910;6903;6904;6909;6910;6932;6930;6932;6944;6946;6966;6971;6972;6973;7000;7009;7011;7010;7021;7018;7017;7014;7018;7017;7020;7024;7027;7028;7030;7031;7037;7047;7056;7059;7061;7047;7074;7077;7078;7087;7116;7117;7127;7125;7101;7106;7112;7113;7125;7126;7129;7130;7133;7137;7138;7156;7158;7159;7158;7159;7160;7161;7163;7169;7172;7195;7196;7197;7199;7206;7218;7219;7222;7227;7239;7252;7256;7257;7249;7250;7256;7263;7267;7268;7279;7287;7290;7269;7268;7274;7278;7274;7282;7294;7295;7300;7299;7305;7297;7300;7301;7328;7360;7376;7365;7359;7362;7364;7373;7390;7398;7399;7407;7402;7401;7409;7411;7416;7408;7405;7408;7410;7414;7415;7418;7422;7428;7441;7442;7445;7454;7458;7460;7458;7467;7470;7501;7500;7501;7509;7521;7522;7523;7537;7540;7541;7551;7553;7554;7564;7565;7567;7563;7564;7580;7603;7604;7613;7614;7616;7627;7621;7630;7631;7641;7642;7652;7647;7646;7666;7690;7693;7691;7693;7699;7705;7682;7701;7703;7702;7710;7709;7711;7714;7713;7718;7727;7753;7756;7764;7782;7788;7787;7793;7794;7795;7767;7771;7776;7787;7791;7789;7790;7805;7804;7806;7814;7815;7816;7830;7832;7831;7830;7859;7878;7894;7896;7906;7927;7928;7929;7924;7929;7933;7934;7935;7946;7948;7950;7951;7973;7975;7976;7975;7974;7982;7964;7977;7967;7975;7973;7981;7999;8010;8017;8020;8021;8030;8055;8061;8069;8071;8072;8073;8082;8083;8096;8116;8122;8133;8134;8128;8136;8115;8122;8120;8126;8127;8134;8157;8158;8160;8164;8165;8179;8180;8186;8195;8205;8200;8197;8198;8199;8187;8193;8202;8214;8225;8224;8245;8235;8243;8244;8249;8250;8259;8264;8265;8273;8269;8273;8276;8278;8283;8284;8280;8294;8295;8296;8299;8300;8301;8302;8303;8305;8306;8310;8324;8326;8328;8335;8342;8344;8338;8341;8342;8348;8349;8351;8347;8355;8356;8357;8361;8364;8365;8372;8377;8392;8388;8387;8388;8394;8396;8407;8411;8426;8427;8426;8427;8430;8432;8435;8436;8437;8433;8428;8430;8431;8441;8442;8444;8441;8460;8464;8466;8459;8481;8486;8489;8462;8461;8478;8484;8483;8487;8488;8489;8513;8517;8518;8520;8534;8537;8538;8542;8546;8559;8564;8569;8582;8580;8582;8581;8586;8599;8605;8606;8593;8595;8600;8603;8608;8624;8632;8635;8640;8641;8642;8643;8662;8664;8674;8684;8685;8684;8692;8696;8701;8710;8691;8673;8674;8677;8675;8674;8669;8671;8670;8675;8678;8693;8697;8701;8702;8705;8713;8715;8720;8734;8741;8750;8753;8755|]
        let inputList = input |> Array.toList
        let expected = 1706
        let actual = Comparer.CountThreeMeasurementIncreases inputList
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateDepthCalculatesDepthCorrectlyWhenMovingDown () =
        let initialDepth = 0
        let direction = "down"
        let movement = 5

        let expected = 5
        let actual = SubmarineCalculator.CalculateDepth initialDepth direction movement
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateDepthCalculatesDepthCorrectlyWhenMovingUp () =
        let initialDepth : int = 3
        let direction : string = "up"
        let movement : int = 2

        let expected : int = 1;
        let actual = SubmarineCalculator.CalculateDepth initialDepth direction movement
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateHorizontalPositionCalculatesCorrectlyWhenMovingForwardAtLeastOneSpace () = 
        let initialPosition = 0
        let movement = 3

        let expected = 3
        let actual = SubmarineCalculator.CalculateHorizontalPosition initialPosition movement
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateNewPositionCalculatesDownMovementAsExpected () =
        let position = (0,0)
        let move : string = "down 3"

        let expected = (0,3)
        let actual = SubmarineCalculator.CalculateNewPosition position move
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateNewPositionCalculatesUpMovementAsExpected () =
        let position = (0,6)
        let move : string = "up 3"

        let expected = (0,3)
        let actual = SubmarineCalculator.CalculateNewPosition position move
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateNewPositionCalculatesForwardMovementAsExpected () =
        let position = (0,6)
        let move : string = "forward 3"

        let expected = (3,6)
        let actual = SubmarineCalculator.CalculateNewPosition position move
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateTotalTravelCalculatesAsExpected () = 
        let input = [|"forward 5";"down 5";"forward 8";"up 3";"down 8";"forward 2"|]
        let inputList = input |> Array.toList

        let expected = 150
        let (finalx, finaly) = SubmarineCalculator.CalculateTotalTravel inputList
        let actual = finalx * finaly
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateTotalTravelCalculatesActualInput () =
        let input = [|"forward 9";"forward 9";"forward 3";"down 2";"forward 8";"down 8";"forward 1";"down 6";"down 9";"down 9";"forward 1";"up 5";"up 4";"up 8";"down 6";"down 7";"forward 4";"forward 6";"forward 2";"forward 2";"forward 4";"down 2";"down 6";"forward 6";"forward 9";"up 4";"up 6";"down 2";"forward 7";"up 7";"down 8";"down 4";"down 6";"forward 1";"down 2";"up 1";"forward 8";"down 9";"forward 6";"up 9";"down 8";"forward 5";"forward 8";"down 8";"up 3";"up 9";"down 2";"down 2";"forward 5";"up 7";"forward 5";"down 6";"forward 4";"down 2";"up 2";"up 7";"up 1";"down 4";"down 8";"forward 6";"down 2";"forward 7";"down 1";"forward 7";"forward 1";"up 1";"down 4";"down 3";"down 4";"down 4";"up 8";"down 1";"up 7";"forward 8";"down 5";"up 1";"down 4";"down 3";"forward 4";"up 7";"forward 1";"down 4";"down 2";"down 4";"up 8";"up 6";"down 1";"up 3";"down 5";"forward 4";"down 3";"forward 9";"down 9";"forward 2";"down 4";"up 3";"down 4";"forward 1";"forward 7";"forward 9";"forward 7";"forward 3";"forward 6";"down 4";"forward 7";"down 5";"down 1";"forward 7";"up 1";"down 8";"down 7";"down 7";"down 7";"down 3";"forward 4";"forward 6";"forward 6";"forward 1";"down 7";"down 6";"down 8";"up 5";"down 7";"up 6";"forward 9";"down 7";"down 1";"down 9";"forward 8";"up 5";"down 6";"forward 3";"up 2";"down 1";"forward 2";"down 3";"up 6";"forward 8";"forward 1";"forward 3";"down 9";"forward 1";"down 3";"up 7";"forward 8";"up 8";"down 7";"down 2";"forward 3";"up 7";"forward 6";"down 7";"down 6";"up 5";"forward 9";"down 7";"up 5";"forward 6";"up 5";"up 6";"forward 6";"down 8";"down 1";"forward 7";"forward 6";"down 5";"down 6";"forward 9";"down 6";"up 5";"forward 9";"forward 4";"down 1";"forward 5";"down 4";"forward 5";"forward 1";"down 1";"forward 4";"down 5";"forward 4";"up 8";"down 1";"forward 6";"down 5";"forward 8";"forward 8";"forward 5";"down 7";"down 4";"forward 4";"up 1";"up 8";"down 6";"up 5";"forward 6";"forward 5";"forward 9";"down 3";"down 5";"forward 3";"down 6";"forward 6";"up 7";"up 6";"down 6";"down 1";"forward 8";"forward 9";"up 5";"forward 8";"forward 9";"forward 9";"down 2";"down 8";"forward 8";"down 2";"up 8";"down 2";"down 2";"up 1";"down 5";"down 6";"down 1";"down 8";"down 9";"forward 3";"forward 2";"down 6";"up 8";"forward 9";"forward 7";"forward 1";"down 8";"up 8";"forward 8";"down 5";"down 3";"up 3";"forward 6";"forward 5";"down 4";"forward 4";"down 4";"forward 5";"forward 9";"forward 2";"forward 9";"down 1";"down 3";"down 6";"forward 6";"down 7";"forward 3";"forward 4";"forward 1";"down 6";"forward 1";"forward 4";"forward 2";"forward 2";"forward 1";"forward 2";"down 1";"up 2";"forward 1";"down 3";"forward 8";"down 3";"down 9";"forward 5";"down 3";"down 3";"forward 2";"forward 9";"down 9";"forward 4";"down 2";"forward 5";"up 8";"down 4";"forward 5";"down 1";"forward 9";"down 1";"forward 7";"forward 2";"down 2";"down 6";"up 3";"forward 7";"up 4";"forward 7";"forward 6";"down 8";"forward 2";"down 3";"forward 9";"forward 4";"forward 8";"down 6";"forward 8";"down 9";"down 2";"down 3";"forward 1";"down 5";"down 3";"forward 2";"forward 7";"down 4";"down 3";"forward 9";"down 2";"forward 2";"forward 1";"up 6";"up 4";"down 5";"forward 5";"up 8";"down 7";"forward 6";"down 5";"forward 3";"forward 3";"forward 7";"up 9";"up 6";"down 5";"up 7";"forward 2";"forward 5";"down 9";"down 6";"forward 7";"down 9";"up 2";"up 5";"forward 1";"forward 8";"forward 9";"up 8";"forward 9";"forward 5";"up 9";"down 4";"down 7";"forward 2";"forward 1";"down 4";"up 8";"down 5";"down 7";"down 9";"down 3";"down 9";"up 8";"up 7";"up 8";"down 8";"down 2";"down 6";"down 6";"up 5";"up 9";"forward 1";"down 8";"up 4";"up 3";"forward 7";"up 7";"down 3";"up 1";"forward 3";"down 7";"forward 8";"forward 2";"down 6";"down 2";"up 7";"up 5";"forward 7";"forward 1";"forward 6";"up 6";"forward 5";"down 2";"up 4";"forward 2";"down 9";"forward 6";"forward 3";"forward 3";"forward 4";"forward 2";"down 6";"forward 9";"forward 7";"down 4";"up 1";"forward 4";"down 6";"down 6";"up 1";"up 1";"forward 3";"down 5";"up 5";"down 3";"down 6";"up 8";"down 2";"up 6";"up 1";"forward 8";"up 6";"down 8";"forward 9";"forward 4";"forward 9";"down 7";"down 9";"down 6";"down 1";"forward 9";"forward 9";"down 6";"down 5";"up 6";"down 9";"up 4";"up 5";"forward 8";"down 4";"down 5";"forward 8";"forward 7";"down 2";"forward 2";"forward 6";"forward 7";"down 1";"down 7";"down 1";"down 6";"forward 2";"up 2";"down 4";"down 8";"forward 1";"down 1";"down 3";"down 3";"up 9";"down 9";"forward 3";"up 4";"forward 1";"down 9";"down 8";"down 9";"forward 5";"forward 4";"up 3";"down 8";"forward 2";"down 3";"up 5";"forward 4";"down 7";"down 8";"down 9";"forward 8";"down 8";"forward 4";"down 6";"down 3";"forward 5";"down 3";"down 9";"down 4";"up 8";"forward 4";"up 6";"down 3";"forward 6";"down 9";"down 7";"forward 7";"forward 3";"forward 2";"forward 4";"down 4";"down 5";"up 9";"down 2";"down 6";"down 9";"forward 7";"forward 3";"up 3";"forward 3";"down 4";"down 7";"forward 2";"down 2";"forward 3";"down 8";"down 7";"down 7";"forward 2";"forward 2";"up 6";"forward 8";"forward 9";"up 3";"forward 8";"forward 5";"forward 7";"up 3";"forward 3";"forward 6";"down 5";"down 5";"down 4";"forward 1";"forward 8";"forward 4";"forward 3";"down 1";"forward 8";"down 4";"up 5";"forward 4";"down 2";"forward 7";"down 2";"forward 9";"down 1";"forward 6";"forward 8";"forward 6";"forward 7";"forward 1";"forward 6";"down 5";"up 3";"forward 7";"down 6";"forward 2";"down 2";"forward 8";"forward 9";"up 7";"forward 1";"forward 1";"up 1";"forward 1";"down 2";"forward 6";"down 9";"up 1";"up 2";"forward 6";"forward 1";"forward 7";"down 1";"up 8";"forward 7";"up 6";"up 4";"down 1";"forward 2";"down 4";"down 1";"down 7";"down 4";"up 3";"forward 8";"forward 3";"forward 5";"down 7";"down 8";"forward 5";"forward 2";"down 5";"down 2";"forward 2";"up 9";"down 3";"down 5";"up 7";"down 4";"down 2";"down 7";"forward 6";"down 2";"forward 1";"up 4";"forward 2";"forward 2";"down 5";"down 1";"down 1";"forward 7";"forward 6";"down 7";"down 5";"up 1";"up 3";"forward 3";"forward 9";"forward 4";"down 1";"down 5";"forward 3";"forward 7";"down 8";"forward 8";"forward 2";"forward 7";"up 7";"down 7";"down 4";"down 2";"up 6";"up 1";"forward 8";"up 8";"up 6";"down 8";"forward 1";"down 5";"forward 3";"down 3";"down 3";"forward 1";"up 3";"up 3";"forward 8";"forward 8";"down 8";"forward 6";"forward 2";"down 7";"forward 8";"down 7";"up 5";"forward 7";"down 1";"forward 9";"up 6";"down 2";"up 2";"up 5";"forward 6";"forward 9";"forward 3";"down 8";"forward 8";"down 2";"up 5";"down 9";"forward 5";"down 6";"down 3";"down 9";"up 8";"up 3";"down 2";"forward 7";"forward 4";"forward 4";"forward 8";"up 6";"up 4";"forward 9";"down 6";"down 8";"up 3";"up 5";"forward 8";"forward 7";"forward 4";"down 8";"forward 1";"forward 5";"down 9";"forward 8";"up 6";"down 6";"down 8";"down 2";"forward 4";"forward 9";"forward 2";"forward 7";"down 3";"forward 3";"up 6";"down 4";"forward 2";"up 4";"down 4";"forward 4";"forward 3";"forward 1";"up 6";"forward 1";"down 1";"forward 7";"up 4";"forward 3";"down 4";"up 6";"up 2";"up 8";"down 1";"down 6";"down 6";"down 1";"down 7";"forward 8";"down 9";"forward 5";"up 2";"up 7";"up 5";"down 6";"up 1";"up 6";"forward 4";"down 7";"forward 5";"forward 1";"down 6";"forward 2";"down 2";"forward 9";"down 9";"up 6";"forward 1";"up 7";"down 7";"forward 1";"down 6";"up 1";"forward 2";"forward 1";"down 4";"forward 9";"forward 7";"forward 5";"down 1";"forward 2";"down 2";"down 2";"down 5";"forward 1";"up 8";"forward 9";"down 7";"forward 9";"down 2";"up 5";"down 9";"down 8";"down 5";"forward 8";"forward 4";"down 4";"down 6";"forward 1";"down 5";"up 6";"down 3";"down 3";"forward 9";"down 9";"forward 6";"down 5";"up 6";"down 5";"up 7";"forward 9";"down 2";"down 4";"down 8";"forward 4";"up 7";"forward 9";"forward 7";"up 5";"down 7";"down 5";"down 1";"forward 5";"forward 4";"down 2";"up 3";"forward 1";"up 4";"up 9";"down 4";"forward 3";"down 4";"down 9";"forward 4";"up 2";"up 3";"forward 7";"up 6";"down 8";"down 8";"forward 6";"forward 2";"forward 3";"forward 9";"forward 7";"down 6";"down 7";"down 4";"down 2";"forward 8";"down 6";"forward 6";"forward 6";"forward 9";"down 8";"down 1";"up 5";"down 1";"forward 9";"down 1";"up 8";"forward 8";"down 3";"forward 1";"down 9";"forward 6";"forward 4";"forward 8";"down 2";"up 8";"down 2";"up 8";"down 9";"down 4";"up 7";"forward 7";"forward 5";"down 5";"down 4";"up 8";"forward 1";"down 7";"forward 1";"up 9";"forward 9";"forward 7";"forward 9";"down 9";"forward 4";"down 7";"forward 6";"forward 6";"up 3";"forward 2";"down 5";"up 8";"down 1";"up 8";"down 4";"down 1";"up 6";"forward 4";"forward 3";"forward 6";"down 3";"forward 4";"forward 4";"forward 4";"down 8";"forward 3";"up 8";"up 8";"down 8";"forward 6";"forward 8";"up 5";"forward 6";"down 8";"down 7";"up 4";"forward 6";"forward 9";"down 9";"forward 4";"up 2";"forward 1";"up 3";"down 9";"down 8";"forward 8";"forward 8";"forward 7";"down 6";"down 1";"up 6";"up 6";"forward 9";"forward 7";"forward 7";"down 3";"down 6";"down 9";"down 4";"forward 7";"forward 3";"forward 3";"down 7";"up 5";"down 3";"forward 6";"forward 3";"forward 5";"up 3";"down 7";"forward 2";"up 7";"forward 9";"down 3";"down 9";"forward 8";"forward 5";"up 7";"up 2";"up 8";"forward 6";"down 8";"forward 2";"forward 4";"up 2";"forward 2";"forward 8";"forward 4";"down 8";"forward 5";"down 4";"down 7";"forward 3";"down 3";"up 1";"down 9";"forward 9";"down 2";"down 1";"forward 1";"down 6";"down 3";"forward 5";"down 3";"down 8";"up 7";"down 1";"up 9";"down 4";"forward 9";"down 4";"forward 3";"forward 6";"down 3";"forward 3";"down 2";"down 7";"down 1";"up 4";"down 9";"down 1";"down 3";"down 4";"down 8";"down 7";"forward 4";"down 4";"down 9";"forward 2";"forward 7";"forward 2";"down 6";"up 8";"forward 6";"down 2";"forward 6";"up 8";"forward 6";"down 9";"forward 2";"forward 6"|]
        let inputList = input |> Array.toList

        let expected = 1989265
        let (finalx, finaly) = SubmarineCalculator.CalculateTotalTravel inputList
        let actual = finalx * finaly
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateTotalTravelWithAimCalculatesAsExpected () =
        let input = [|"forward 5";"down 5";"forward 8";"up 3";"down 8";"forward 2"|]
        let inputList = input |> Array.toList

        let expected = 900
        let (finalx, finaly, finalAim) = SubmarineCalculator.CalculateTotalTravelWithAim inputList
        let actual = finalx * finaly
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    member this.CalculateTotalTravelWithAimCalculatesActualInput () =
        let input = [|"forward 9";"forward 9";"forward 3";"down 2";"forward 8";"down 8";"forward 1";"down 6";"down 9";"down 9";"forward 1";"up 5";"up 4";"up 8";"down 6";"down 7";"forward 4";"forward 6";"forward 2";"forward 2";"forward 4";"down 2";"down 6";"forward 6";"forward 9";"up 4";"up 6";"down 2";"forward 7";"up 7";"down 8";"down 4";"down 6";"forward 1";"down 2";"up 1";"forward 8";"down 9";"forward 6";"up 9";"down 8";"forward 5";"forward 8";"down 8";"up 3";"up 9";"down 2";"down 2";"forward 5";"up 7";"forward 5";"down 6";"forward 4";"down 2";"up 2";"up 7";"up 1";"down 4";"down 8";"forward 6";"down 2";"forward 7";"down 1";"forward 7";"forward 1";"up 1";"down 4";"down 3";"down 4";"down 4";"up 8";"down 1";"up 7";"forward 8";"down 5";"up 1";"down 4";"down 3";"forward 4";"up 7";"forward 1";"down 4";"down 2";"down 4";"up 8";"up 6";"down 1";"up 3";"down 5";"forward 4";"down 3";"forward 9";"down 9";"forward 2";"down 4";"up 3";"down 4";"forward 1";"forward 7";"forward 9";"forward 7";"forward 3";"forward 6";"down 4";"forward 7";"down 5";"down 1";"forward 7";"up 1";"down 8";"down 7";"down 7";"down 7";"down 3";"forward 4";"forward 6";"forward 6";"forward 1";"down 7";"down 6";"down 8";"up 5";"down 7";"up 6";"forward 9";"down 7";"down 1";"down 9";"forward 8";"up 5";"down 6";"forward 3";"up 2";"down 1";"forward 2";"down 3";"up 6";"forward 8";"forward 1";"forward 3";"down 9";"forward 1";"down 3";"up 7";"forward 8";"up 8";"down 7";"down 2";"forward 3";"up 7";"forward 6";"down 7";"down 6";"up 5";"forward 9";"down 7";"up 5";"forward 6";"up 5";"up 6";"forward 6";"down 8";"down 1";"forward 7";"forward 6";"down 5";"down 6";"forward 9";"down 6";"up 5";"forward 9";"forward 4";"down 1";"forward 5";"down 4";"forward 5";"forward 1";"down 1";"forward 4";"down 5";"forward 4";"up 8";"down 1";"forward 6";"down 5";"forward 8";"forward 8";"forward 5";"down 7";"down 4";"forward 4";"up 1";"up 8";"down 6";"up 5";"forward 6";"forward 5";"forward 9";"down 3";"down 5";"forward 3";"down 6";"forward 6";"up 7";"up 6";"down 6";"down 1";"forward 8";"forward 9";"up 5";"forward 8";"forward 9";"forward 9";"down 2";"down 8";"forward 8";"down 2";"up 8";"down 2";"down 2";"up 1";"down 5";"down 6";"down 1";"down 8";"down 9";"forward 3";"forward 2";"down 6";"up 8";"forward 9";"forward 7";"forward 1";"down 8";"up 8";"forward 8";"down 5";"down 3";"up 3";"forward 6";"forward 5";"down 4";"forward 4";"down 4";"forward 5";"forward 9";"forward 2";"forward 9";"down 1";"down 3";"down 6";"forward 6";"down 7";"forward 3";"forward 4";"forward 1";"down 6";"forward 1";"forward 4";"forward 2";"forward 2";"forward 1";"forward 2";"down 1";"up 2";"forward 1";"down 3";"forward 8";"down 3";"down 9";"forward 5";"down 3";"down 3";"forward 2";"forward 9";"down 9";"forward 4";"down 2";"forward 5";"up 8";"down 4";"forward 5";"down 1";"forward 9";"down 1";"forward 7";"forward 2";"down 2";"down 6";"up 3";"forward 7";"up 4";"forward 7";"forward 6";"down 8";"forward 2";"down 3";"forward 9";"forward 4";"forward 8";"down 6";"forward 8";"down 9";"down 2";"down 3";"forward 1";"down 5";"down 3";"forward 2";"forward 7";"down 4";"down 3";"forward 9";"down 2";"forward 2";"forward 1";"up 6";"up 4";"down 5";"forward 5";"up 8";"down 7";"forward 6";"down 5";"forward 3";"forward 3";"forward 7";"up 9";"up 6";"down 5";"up 7";"forward 2";"forward 5";"down 9";"down 6";"forward 7";"down 9";"up 2";"up 5";"forward 1";"forward 8";"forward 9";"up 8";"forward 9";"forward 5";"up 9";"down 4";"down 7";"forward 2";"forward 1";"down 4";"up 8";"down 5";"down 7";"down 9";"down 3";"down 9";"up 8";"up 7";"up 8";"down 8";"down 2";"down 6";"down 6";"up 5";"up 9";"forward 1";"down 8";"up 4";"up 3";"forward 7";"up 7";"down 3";"up 1";"forward 3";"down 7";"forward 8";"forward 2";"down 6";"down 2";"up 7";"up 5";"forward 7";"forward 1";"forward 6";"up 6";"forward 5";"down 2";"up 4";"forward 2";"down 9";"forward 6";"forward 3";"forward 3";"forward 4";"forward 2";"down 6";"forward 9";"forward 7";"down 4";"up 1";"forward 4";"down 6";"down 6";"up 1";"up 1";"forward 3";"down 5";"up 5";"down 3";"down 6";"up 8";"down 2";"up 6";"up 1";"forward 8";"up 6";"down 8";"forward 9";"forward 4";"forward 9";"down 7";"down 9";"down 6";"down 1";"forward 9";"forward 9";"down 6";"down 5";"up 6";"down 9";"up 4";"up 5";"forward 8";"down 4";"down 5";"forward 8";"forward 7";"down 2";"forward 2";"forward 6";"forward 7";"down 1";"down 7";"down 1";"down 6";"forward 2";"up 2";"down 4";"down 8";"forward 1";"down 1";"down 3";"down 3";"up 9";"down 9";"forward 3";"up 4";"forward 1";"down 9";"down 8";"down 9";"forward 5";"forward 4";"up 3";"down 8";"forward 2";"down 3";"up 5";"forward 4";"down 7";"down 8";"down 9";"forward 8";"down 8";"forward 4";"down 6";"down 3";"forward 5";"down 3";"down 9";"down 4";"up 8";"forward 4";"up 6";"down 3";"forward 6";"down 9";"down 7";"forward 7";"forward 3";"forward 2";"forward 4";"down 4";"down 5";"up 9";"down 2";"down 6";"down 9";"forward 7";"forward 3";"up 3";"forward 3";"down 4";"down 7";"forward 2";"down 2";"forward 3";"down 8";"down 7";"down 7";"forward 2";"forward 2";"up 6";"forward 8";"forward 9";"up 3";"forward 8";"forward 5";"forward 7";"up 3";"forward 3";"forward 6";"down 5";"down 5";"down 4";"forward 1";"forward 8";"forward 4";"forward 3";"down 1";"forward 8";"down 4";"up 5";"forward 4";"down 2";"forward 7";"down 2";"forward 9";"down 1";"forward 6";"forward 8";"forward 6";"forward 7";"forward 1";"forward 6";"down 5";"up 3";"forward 7";"down 6";"forward 2";"down 2";"forward 8";"forward 9";"up 7";"forward 1";"forward 1";"up 1";"forward 1";"down 2";"forward 6";"down 9";"up 1";"up 2";"forward 6";"forward 1";"forward 7";"down 1";"up 8";"forward 7";"up 6";"up 4";"down 1";"forward 2";"down 4";"down 1";"down 7";"down 4";"up 3";"forward 8";"forward 3";"forward 5";"down 7";"down 8";"forward 5";"forward 2";"down 5";"down 2";"forward 2";"up 9";"down 3";"down 5";"up 7";"down 4";"down 2";"down 7";"forward 6";"down 2";"forward 1";"up 4";"forward 2";"forward 2";"down 5";"down 1";"down 1";"forward 7";"forward 6";"down 7";"down 5";"up 1";"up 3";"forward 3";"forward 9";"forward 4";"down 1";"down 5";"forward 3";"forward 7";"down 8";"forward 8";"forward 2";"forward 7";"up 7";"down 7";"down 4";"down 2";"up 6";"up 1";"forward 8";"up 8";"up 6";"down 8";"forward 1";"down 5";"forward 3";"down 3";"down 3";"forward 1";"up 3";"up 3";"forward 8";"forward 8";"down 8";"forward 6";"forward 2";"down 7";"forward 8";"down 7";"up 5";"forward 7";"down 1";"forward 9";"up 6";"down 2";"up 2";"up 5";"forward 6";"forward 9";"forward 3";"down 8";"forward 8";"down 2";"up 5";"down 9";"forward 5";"down 6";"down 3";"down 9";"up 8";"up 3";"down 2";"forward 7";"forward 4";"forward 4";"forward 8";"up 6";"up 4";"forward 9";"down 6";"down 8";"up 3";"up 5";"forward 8";"forward 7";"forward 4";"down 8";"forward 1";"forward 5";"down 9";"forward 8";"up 6";"down 6";"down 8";"down 2";"forward 4";"forward 9";"forward 2";"forward 7";"down 3";"forward 3";"up 6";"down 4";"forward 2";"up 4";"down 4";"forward 4";"forward 3";"forward 1";"up 6";"forward 1";"down 1";"forward 7";"up 4";"forward 3";"down 4";"up 6";"up 2";"up 8";"down 1";"down 6";"down 6";"down 1";"down 7";"forward 8";"down 9";"forward 5";"up 2";"up 7";"up 5";"down 6";"up 1";"up 6";"forward 4";"down 7";"forward 5";"forward 1";"down 6";"forward 2";"down 2";"forward 9";"down 9";"up 6";"forward 1";"up 7";"down 7";"forward 1";"down 6";"up 1";"forward 2";"forward 1";"down 4";"forward 9";"forward 7";"forward 5";"down 1";"forward 2";"down 2";"down 2";"down 5";"forward 1";"up 8";"forward 9";"down 7";"forward 9";"down 2";"up 5";"down 9";"down 8";"down 5";"forward 8";"forward 4";"down 4";"down 6";"forward 1";"down 5";"up 6";"down 3";"down 3";"forward 9";"down 9";"forward 6";"down 5";"up 6";"down 5";"up 7";"forward 9";"down 2";"down 4";"down 8";"forward 4";"up 7";"forward 9";"forward 7";"up 5";"down 7";"down 5";"down 1";"forward 5";"forward 4";"down 2";"up 3";"forward 1";"up 4";"up 9";"down 4";"forward 3";"down 4";"down 9";"forward 4";"up 2";"up 3";"forward 7";"up 6";"down 8";"down 8";"forward 6";"forward 2";"forward 3";"forward 9";"forward 7";"down 6";"down 7";"down 4";"down 2";"forward 8";"down 6";"forward 6";"forward 6";"forward 9";"down 8";"down 1";"up 5";"down 1";"forward 9";"down 1";"up 8";"forward 8";"down 3";"forward 1";"down 9";"forward 6";"forward 4";"forward 8";"down 2";"up 8";"down 2";"up 8";"down 9";"down 4";"up 7";"forward 7";"forward 5";"down 5";"down 4";"up 8";"forward 1";"down 7";"forward 1";"up 9";"forward 9";"forward 7";"forward 9";"down 9";"forward 4";"down 7";"forward 6";"forward 6";"up 3";"forward 2";"down 5";"up 8";"down 1";"up 8";"down 4";"down 1";"up 6";"forward 4";"forward 3";"forward 6";"down 3";"forward 4";"forward 4";"forward 4";"down 8";"forward 3";"up 8";"up 8";"down 8";"forward 6";"forward 8";"up 5";"forward 6";"down 8";"down 7";"up 4";"forward 6";"forward 9";"down 9";"forward 4";"up 2";"forward 1";"up 3";"down 9";"down 8";"forward 8";"forward 8";"forward 7";"down 6";"down 1";"up 6";"up 6";"forward 9";"forward 7";"forward 7";"down 3";"down 6";"down 9";"down 4";"forward 7";"forward 3";"forward 3";"down 7";"up 5";"down 3";"forward 6";"forward 3";"forward 5";"up 3";"down 7";"forward 2";"up 7";"forward 9";"down 3";"down 9";"forward 8";"forward 5";"up 7";"up 2";"up 8";"forward 6";"down 8";"forward 2";"forward 4";"up 2";"forward 2";"forward 8";"forward 4";"down 8";"forward 5";"down 4";"down 7";"forward 3";"down 3";"up 1";"down 9";"forward 9";"down 2";"down 1";"forward 1";"down 6";"down 3";"forward 5";"down 3";"down 8";"up 7";"down 1";"up 9";"down 4";"forward 9";"down 4";"forward 3";"forward 6";"down 3";"forward 3";"down 2";"down 7";"down 1";"up 4";"down 9";"down 1";"down 3";"down 4";"down 8";"down 7";"forward 4";"down 4";"down 9";"forward 2";"forward 7";"forward 2";"down 6";"up 8";"forward 6";"down 2";"forward 6";"up 8";"forward 6";"down 9";"forward 2";"forward 6"|]
        let inputList = input |> Array.toList

        let expected = 2089174012
        let (finalx, finaly, finalAim) = SubmarineCalculator.CalculateTotalTravelWithAim inputList
        let actual = finalx * finaly
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    // Need a method that takes in a collection of numbers, in binary form, and for each position
    // determine the most common bit number
    member this.ProcessDiagnosticReportReturnsExpectedTestResult () =
        let input = ["00100";"11110";"10110";"10111";"10101";"01111";"00111";"11100";"10000";"11001";"00010";"01010"]
        
        let expected = 198
        let actual = SubmarineCalculator.ProcessDiagnosticReport input
        Assert.AreEqual(expected, actual)

    [<TestMethod>]
    // Need a method that takes in a collection of numbers, in binary form, and for each position
    // determine the most common bit number
    member this.ProcessDiagnosticReportReturnsExpectedResult () =
        let input = [|"000001000101";
            "101011100101";
            "100011100110";
            "101001111000";
            "000001000110";
            "000110100010";
            "100010101110";
            "000011001110";
            "110001101011";
            "101100110111";
            "101011011110";
            "011110010101";
            "010011010011";
            "111101110011";
            "001111011001";
            "010100101101";
            "110110110111";
            "011111101100";
            "000000101011";
            "100010010011";
            "011010000001";
            "111000111011";
            "001111111100";
            "001111110111";
            "010100011100";
            "001010110100";
            "010110011000";
            "001010011110";
            "001110010010";
            "110100111100";
            "110010110000";
            "000110111000";
            "110011000110";
            "010011011111";
            "011000010101";
            "010101010100";
            "000010001101";
            "011001101100";
            "101100110011";
            "100011110101";
            "110010011010";
            "000011100010";
            "001100010001";
            "001100011100";
            "100010011111";
            "000001111110";
            "011111111000";
            "001100010011";
            "011011010101";
            "111000011010";
            "001110110111";
            "000001101000";
            "111011111010";
            "000100101111";
            "110100100100";
            "110000110011";
            "111100101100";
            "101011101111";
            "101101010111";
            "011111001010";
            "110010111000";
            "110111110001";
            "110011101000";
            "111101011011";
            "001001101110";
            "110110010100";
            "000001110111";
            "111111010001";
            "100101100101";
            "100100110010";
            "100100010010";
            "001100111110";
            "010110101111";
            "110000001111";
            "110001011001";
            "100001011000";
            "101101100111";
            "101100100100";
            "000111001100";
            "100101101110";
            "010010000011";
            "100010110110";
            "110010101101";
            "000011011001";
            "010011110100";
            "101110100111";
            "000100001001";
            "000100010011";
            "010111010101";
            "011010001000";
            "100011101100";
            "111010101000";
            "111101100110";
            "100110010011";
            "111100011000";
            "101111111110";
            "111001011110";
            "010101110101";
            "011110101100";
            "000100101101";
            "110100110101";
            "100100001011";
            "100110100110";
            "000011010000";
            "100011010000";
            "000010110101";
            "011010101110";
            "100001001000";
            "111011101111";
            "001011101000";
            "101110101110";
            "101101000010";
            "110100001000";
            "001010101010";
            "011011110101";
            "101110110000";
            "110011010100";
            "010010100000";
            "011001110001";
            "011110111110";
            "101100001100";
            "100110111111";
            "111101001000";
            "110001001010";
            "111000100110";
            "000000001001";
            "100100100011";
            "111111000011";
            "111001100110";
            "110001110001";
            "010001111011";
            "000010110011";
            "111011111100";
            "011010101010";
            "111001101001";
            "111101100101";
            "101100000001";
            "000110111001";
            "101101011001";
            "000100110011";
            "010010101010";
            "110000100010";
            "001101010100";
            "100000010101";
            "101011100100";
            "000000110000";
            "001111010110";
            "011011100111";
            "110010010111";
            "101101100101";
            "110111010110";
            "011001100011";
            "101100111010";
            "100011011000";
            "011001011001";
            "110011001100";
            "111111111001";
            "101100011101";
            "111110110101";
            "010110010101";
            "001110110100";
            "111101000000";
            "011001111100";
            "000101100010";
            "010100111110";
            "000101011000";
            "010011001110";
            "011111111101";
            "000000110101";
            "100101001000";
            "101110100110";
            "001001010010";
            "000001000000";
            "000101011011";
            "010001011111";
            "000111111111";
            "010100101001";
            "100111110001";
            "110110011110";
            "110111010011";
            "001010100010";
            "101100101011";
            "110010110101";
            "010001100001";
            "110110110100";
            "111011111011";
            "111100111100";
            "111101111001";
            "011000110111";
            "111010100000";
            "011101001100";
            "111000011000";
            "111100100111";
            "110110111001";
            "000100000111";
            "111101100001";
            "101010011111";
            "011000001011";
            "101111111000";
            "100110101011";
            "100111101001";
            "110101000111";
            "000111010000";
            "010011011001";
            "110101101111";
            "000001011010";
            "100001000110";
            "011011101110";
            "110100011111";
            "000101010110";
            "100001010100";
            "010000101011";
            "110111100001";
            "010111011011";
            "110101011110";
            "100111010010";
            "111000011101";
            "100001111110";
            "101110001100";
            "101011110000";
            "001110000010";
            "010001001000";
            "011011001001";
            "100100110100";
            "111111011001";
            "100011110111";
            "000001001001";
            "110010000110";
            "110001011000";
            "000000001100";
            "101111010101";
            "101110011100";
            "000000101101";
            "100110101001";
            "111010110010";
            "010111010010";
            "010101111001";
            "100010101000";
            "011001000111";
            "011011110100";
            "101010000110";
            "011010111011";
            "101100100001";
            "000101001110";
            "101110111001";
            "000010000101";
            "001011110110";
            "100000101000";
            "000010000110";
            "001011010100";
            "111101011000";
            "001010111001";
            "001111000000";
            "000100100001";
            "100101011000";
            "100000010010";
            "111101100010";
            "000011000111";
            "000110001000";
            "001110101101";
            "010011011110";
            "011101100000";
            "010100000001";
            "001110010001";
            "010000000100";
            "000100010010";
            "000101000011";
            "000111100001";
            "111010110100";
            "100111100110";
            "100100001001";
            "001111111111";
            "101010001100";
            "110011001001";
            "000011010101";
            "101001001111";
            "010010001100";
            "001010110010";
            "100011110110";
            "100001111010";
            "100100101001";
            "111010111000";
            "111011110111";
            "011110100000";
            "101110000010";
            "111111111000";
            "000110011010";
            "010010000111";
            "000111101000";
            "010100110110";
            "010001011010";
            "011001101010";
            "101010000101";
            "011110011100";
            "000000000110";
            "001001000110";
            "000001001011";
            "100011001001";
            "001001100011";
            "100101001110";
            "110110101101";
            "001001100110";
            "110000011111";
            "011110101011";
            "010111001001";
            "101011010010";
            "011101110000";
            "000000011110";
            "010000101101";
            "001000000111";
            "001010001010";
            "101111100111";
            "010111101001";
            "101010001000";
            "010110110001";
            "101110100010";
            "001001110101";
            "011000100100";
            "111011011110";
            "000101110101";
            "111010100110";
            "100110011011";
            "100010100010";
            "001001111101";
            "110110111010";
            "101101100011";
            "011000011000";
            "010011010000";
            "010000111100";
            "110110001101";
            "011000111101";
            "011101010011";
            "001000000001";
            "101010011100";
            "101111011100";
            "011010101111";
            "001110110010";
            "001111100011";
            "001011010011";
            "110000001110";
            "000000110111";
            "110011101100";
            "010000101100";
            "000101001010";
            "101010110111";
            "011100000001";
            "110011101111";
            "100011111111";
            "110100011100";
            "111000100111";
            "000000001000";
            "100011011100";
            "110010000101";
            "100110010010";
            "000100100000";
            "010101100110";
            "010100010011";
            "000110100111";
            "111001010001";
            "010001011011";
            "100011010101";
            "000100001010";
            "010000001000";
            "010011101011";
            "010100000101";
            "001111001100";
            "101000000001";
            "010010100101";
            "011001111000";
            "000101101001";
            "010101011110";
            "000001010001";
            "010110000101";
            "010000011111";
            "100110111011";
            "001010010100";
            "001100100001";
            "011111111001";
            "011100101001";
            "101001111100";
            "110100101100";
            "010010101001";
            "101000001010";
            "010010010101";
            "101000110011";
            "011100010000";
            "001001111010";
            "101011010111";
            "100100100111";
            "110001101111";
            "100000101101";
            "000111110100";
            "000010110110";
            "010001100101";
            "110000111111";
            "001011000100";
            "011010011100";
            "011110011010";
            "010100101111";
            "001001010100";
            "101111011111";
            "000100111100";
            "111110010011";
            "110011010010";
            "011100111101";
            "001000011111";
            "100111000101";
            "110001100100";
            "110000110101";
            "011001001111";
            "100110010101";
            "100011001111";
            "100010000111";
            "111000110101";
            "111000000000";
            "101101010001";
            "010001000100";
            "010000101110";
            "011111110001";
            "011010101000";
            "101101111110";
            "100101101111";
            "001111101100";
            "110011100100";
            "001011100010";
            "001101001010";
            "011110010011";
            "000100011101";
            "011000010011";
            "111110101111";
            "101101110010";
            "000011101010";
            "001010110101";
            "111111000110";
            "100000101011";
            "001000111111";
            "101011110100";
            "001001110001";
            "100111101010";
            "000111110101";
            "010110100010";
            "110011010111";
            "010110110111";
            "001100100100";
            "111000001111";
            "011000010000";
            "101010000111";
            "111101111010";
            "011101100010";
            "011000001101";
            "010000010010";
            "101010110000";
            "010000100000";
            "111011100100";
            "101101011000";
            "011000010110";
            "101111111111";
            "000000111101";
            "101100110110";
            "011000110011";
            "110111100000";
            "010101111100";
            "010101101011";
            "100011001101";
            "101100111011";
            "111000111010";
            "000110010111";
            "111111001111";
            "101010111010";
            "111011101001";
            "001111001110";
            "010010001101";
            "111110000100";
            "100000000100";
            "011101011101";
            "010000011101";
            "010001011000";
            "000110011000";
            "010001101011";
            "110110000011";
            "111110110000";
            "101001011100";
            "100011110010";
            "100000010011";
            "111011101101";
            "000101101110";
            "010000100111";
            "011000000001";
            "000111100100";
            "110111111001";
            "111010111001";
            "101111100101";
            "100110000011";
            "110010011101";
            "010110111010";
            "011110001001";
            "110000100000";
            "001000010100";
            "010101101001";
            "100100011110";
            "011000100101";
            "010010001010";
            "001010001111";
            "101011001010";
            "011110101111";
            "110011001111";
            "111001001011";
            "000000111001";
            "010010101100";
            "100101010011";
            "011111011000";
            "101010100110";
            "110101001101";
            "011000100000";
            "000101111011";
            "110011100010";
            "111011100001";
            "010001111000";
            "111110000101";
            "001100000001";
            "001101001111";
            "110001010101";
            "010011111001";
            "100100101000";
            "110011011110";
            "100011101101";
            "100000011011";
            "101101101010";
            "100111111100";
            "100001000001";
            "110101111111";
            "010000100110";
            "011010010101";
            "110011010110";
            "101001010011";
            "111010000001";
            "000100110101";
            "001100100111";
            "001011000011";
            "101110010000";
            "011010111110";
            "110101101011";
            "011010001110";
            "101100101111";
            "011111011011";
            "101110011111";
            "011000110101";
            "101100001011";
            "001010001100";
            "110111101011";
            "100010001100";
            "100111100111";
            "110000111011";
            "011001101000";
            "001100010111";
            "001101001001";
            "001111010011";
            "100111000111";
            "111011010100";
            "000011101110";
            "111101000011";
            "010000011001";
            "111101101000";
            "000111011100";
            "010100001001";
            "110011111110";
            "001011010010";
            "111000010100";
            "100001010000";
            "101000000000";
            "011110000000";
            "111111110001";
            "101010100011";
            "001011111010";
            "110011101110";
            "011110001011";
            "101011100000";
            "010101011100";
            "010001101101";
            "010010110110";
            "101011010100";
            "010001001100";
            "111001111010";
            "101111111101";
            "101000101011";
            "010010000100";
            "000011110001";
            "110010001000";
            "010111101011";
            "111010010101";
            "010110100111";
            "110000100110";
            "000011111110";
            "001000101011";
            "000000000010";
            "011100100010";
            "011110010000";
            "000010011111";
            "001000011000";
            "001111000110";
            "110110011101";
            "010100110010";
            "101101100110";
            "001101100100";
            "111000001000";
            "001011100100";
            "110110010001";
            "000100101010";
            "100100111111";
            "000100111011";
            "100001000011";
            "101011001001";
            "000110101111";
            "010110111111";
            "101100010011";
            "111010110101";
            "001010001110";
            "111000100011";
            "011000110001";
            "010000110000";
            "101001100110";
            "011001010001";
            "001011001111";
            "101111111010";
            "110111111100";
            "010000010001";
            "000100101011";
            "000000011100";
            "110010000011";
            "111000010000";
            "110101111011";
            "001010100100";
            "001001000111";
            "110110001111";
            "011111001111";
            "010010111000";
            "011010011000";
            "111100111101";
            "100100101011";
            "000110001101";
            "110011001101";
            "000000100010";
            "001000110100";
            "001010110001";
            "110001000110";
            "111011000101";
            "100001010011";
            "100111011101";
            "010101110000";
            "110010000010";
            "010001111010";
            "111010111111";
            "010110001101";
            "110001110101";
            "100110101100";
            "000001011011";
            "111111011111";
            "011001011011";
            "000101110011";
            "000011110000";
            "100100010110";
            "100000010001";
            "011100110110";
            "101011101011";
            "010100101110";
            "010011011101";
            "001001111000";
            "000000011101";
            "010101100000";
            "001000100011";
            "011011111001";
            "110011100000";
            "100000110111";
            "010000000011";
            "001010011010";
            "011100010110";
            "101010100001";
            "001110111000";
            "110101000110";
            "001110011010";
            "010100001011";
            "001001010110";
            "011010000110";
            "010010101000";
            "001110100011";
            "110101011001";
            "101111101001";
            "001101110111";
            "110101111001";
            "011010110110";
            "101001000101";
            "000000100111";
            "101011111110";
            "111111100001";
            "101000111111";
            "000110100011";
            "010001110110";
            "000111101010";
            "000011011101";
            "100001101010";
            "001011101111";
            "111100010101";
            "110110111000";
            "110110011111";
            "010110001011";
            "011010000101";
            "110101110011";
            "101011101100";
            "011101111100";
            "000111011010";
            "100001011101";
            "000010001111";
            "000110111100";
            "000101000101";
            "101010101010";
            "011111001001";
            "010111110011";
            "111010000000";
            "001100011101";
            "001000101000";
            "100101010100";
            "010011111110";
            "010011000001";
            "010110100100";
            "010011001010";
            "010010100010";
            "111100001011";
            "100110100111";
            "000010110010";
            "101111000100";
            "101000000011";
            "110101011000";
            "001000010111";
            "100100110111";
            "000000000011";
            "001011111000";
            "100101000101";
            "101100010101";
            "101100000101";
            "000101001111";
            "101111010001";
            "111101011110";
            "000000010001";
            "100001110100";
            "101111000000";
            "101000101110";
            "010100001110";
            "010000110011";
            "101101110110";
            "001011000101";
            "000100100010";
            "111100010000";
            "100000100010";
            "011101000101";
            "111000110111";
            "110110001011";
            "101101111001";
            "011001111010";
            "001111011010";
            "111010101100";
            "101110011101";
            "100110101101";
            "101011011011";
            "110100000001";
            "011001100100";
            "000001011101";
            "000011011110";
            "100101101101";
            "001110100110";
            "110011110111";
            "010001110000";
            "100011100011";
            "001110011001";
            "011011110110";
            "100000010100";
            "001010101101";
            "010110000111";
            "010001011001";
            "001111111000";
            "011000011001";
            "110101101100";
            "110101000011";
            "100000011101";
            "001100001011";
            "000011000000";
            "111000010101";
            "110000011010";
            "101111000111";
            "011101010000";
            "011111000111";
            "101010111000";
            "011000110110";
            "011101101001";
            "111110101010";
            "001010111000";
            "000010011100";
            "000100111010";
            "000111100010";
            "010101111110";
            "001000011101";
            "110110111011";
            "011001101110";
            "011111111100";
            "001100100011";
            "000100001101";
            "011100001111";
            "000001010011";
            "011001111110";
            "100001100010";
            "010001110100";
            "011010110001";
            "001010101000";
            "101100001001";
            "101010000001";
            "000001101100";
            "100000000111";
            "010100010111";
            "110001111001";
            "000010100111";
            "011100101000";
            "011010110100";
            "100111100010";
            "100101110011";
            "001111010001";
            "100111101011";
            "101111110100";
            "110010100111";
            "000011110110";
            "101100100011";
            "111011101110";
            "000011010110";
            "011010000011";
            "011001011010";
            "001010011101";
            "000110000101";
            "011110101110";
            "010110001001";
            "101110100101";
            "100111001110";
            "011011111101";
            "110010110100";
            "101010010010";
            "011110110000";
            "001100110110";
            "111001000101";
            "110000001100";
            "011010011011";
            "011111010110";
            "101010011110";
            "101100010001";
            "001110101001";
            "101101010110";
            "111110110110";
            "000000101000";
            "001111000001";
            "010010001111";
            "100011100010";
            "011111110010";
            "000010010001";
            "011100000000";
            "001001111001";
            "100101101010";
            "101000101101";
            "111010011100";
            "101001101000";
            "101100110100";
            "100111000011";
            "111011100011";
            "101100010110";
            "010010101110";
            "011010010011";
            "111001011100";
            "101100010010";
            "101000110111";
            "101011010001";
            "111000110100";
            "110000101001";
            "000010101010";
            "001000110000";
            "010110010011";
            "110110100110";
            "111110000000";
            "111001100101";
            "101101110011";
            "100001111000";
            "100010011001";
            "111101000101";
            "000101010101";
            "010110111011";
            "111111111111";
            "001100000000";
            "111110001111";
            "110001001011";
            "010110110000";
            "110110101111";
            "110001101101";
            "011111101001";
            "011101100101";
            "111101001100";
            "110001101000";
            "110001011100";
            "101100011100";
            "101110110101";
            "000110110011";
            "111110111110";
            "011111010000";
            "000111010100";
            "101110001000";
            "101111100110";
            "000101001011";
            "111101111011";
            "001100100110";
            "011110100010";
            "010111011001";
            "110110110011";
            "000100100101";
            "001101011111";
            "011010001010";
            "010000111110";
            "100010111011";
            "101000100101";
            "111111101111";
            "111111111110";
            "110111100111";
            "001011110001";
            "001101000010";
            "010111010011";
            "101101101110";
            "100110001011";
            "111100001111";
            "101010011010";
            "000110111111";
            "011110000100";
            "111100110011";
            "111110111101";
            "011001101111";
            "110110011001";
            "111010001101";
            "010000001101";
            "100001111101";
            "100101111111";
            "100111110111";
            "110001000001";
            "110111001101";
            "011001110100";
            "010001110101";
            "100010111110";
            "010010010010";
            "000010111101";
            "101001101100";
            "100011111100";
            "110010111010";
            "100101011011";
            "110110101011";
            "101101010000";
            "011110100011";
            "101100111111";
            "110001100001";
            "110100111010";
            "011000100011";
            "011000100010";
            "011111101111";
            "101000010110";
            "000101000010";
            "001000100001";
            "111101110010";
            "000111000001";
            "101000111000";
            "100110100011";
            "001001001111";
            "110101011010";
            "101011101101";
            "100011000110";
            "100100111000";
            "001111001111";
            "010100010100";
            "000100100100";
            "010100101011";
            "010001100000";
            "011010110111";
            "111110111000";
            "110100101001";
            "010100011000";
            "110110101110";
            "010000101001";
            "000111001010";
            "001001100111";
            "110000110110";
            "011000101010";
            "000011110100";
            "111110010000";
            "010000101111";
            "100111010101";
            "110110110000";
            "110100101110";
            "111000110010";
            "011110001100";
            "000001100100";
            "111110000111";
            "001000011001"|]
        let inputList = input |> Array.toList

        let expected = 738234
        let actual = SubmarineCalculator.ProcessDiagnosticReport inputList
        Assert.AreEqual(expected, actual)